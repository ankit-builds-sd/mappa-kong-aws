{
  "namespace": "goals",
  "extends": ["project", "trickle"],
  "quantities": [
    {
      "id": "goals__q_totalGoalsAchieved",
      "projectInputs": [],
      "staticValues": [],
      "lookUps": [],
      "quantities": ["goals__q_goalNetZeroEnergy", "goals__q_goalNetZeroWater", "goals__q_goalNetZeroWaste", "goals__q_goalNetZeroEmbodiedCarbon"],
      "output": "let counter = 0;\nfor (const goal of [\ngoals__q_goalNetZeroEnergy,\ngoals__q_goalNetZeroWater,\ngoals__q_goalNetZeroWaste,\ngoals__q_goalNetZeroEmbodiedCarbon,\n]) {\nif (goal.status === 'Achieved') counter++;\n}\nreturn counter;"
    },
    {
      "id": "goals__q_totalTargetsAchieved",
      "projectInputs": [],
      "staticValues": [],
      "lookUps": [],
      "quantities": ["goals__q_targetNzeMORE", "goals__q_targetNzeCAEN", "goals__q_targetNzwCSWM", "goals__q_targetNzecCSAM"],
      "output": "let counter = 0;\nfor (const target of [\ngoals__q_targetNzeMORE,\ngoals__q_targetNzeCAEN,\ngoals__q_targetNzwCSWM,\ngoals__q_targetNzecCSAM,\n]) {\nif (target.status === 'Achieved') counter++;\n}\nreturn counter;"
    },
    {
      "id": "goals__q_totalTargetsTargeted",
      "projectInputs": [],
      "staticValues": [],
      "lookUps": [],
      "quantities": ["goals__q_targetNzeMORE", "goals__q_targetNzeCAEN", "goals__q_targetNzwCSWM", "goals__q_targetNzecCSAM"],
      "output": "let counter = 0;\nfor (const target of [\ngoals__q_targetNzeMORE,\ngoals__q_targetNzeCAEN,\ngoals__q_targetNzwCSWM,\ngoals__q_targetNzecCSAM,\n]) {\nif (target.state === true) counter++;\n}\nreturn counter;"
    },
    {
      "id": "goals__q_scCapexIncrease",
      "projectInputs": [],
      "staticValues": [],
      "lookUps": [],
      "quantities": ["goals__q_goalNetZeroEnergy", "goals__q_goalNetZeroWater", "goals__q_goalNetZeroWaste", "goals__q_goalNetZeroEmbodiedCarbon"],
      "output": "let sum = 0;\nfor (const goal of [\ngoals__q_goalNetZeroEnergy,\ngoals__q_goalNetZeroWater,\ngoals__q_goalNetZeroWaste,\ngoals__q_goalNetZeroEmbodiedCarbon,\n]) {\nsum += goal.costPerSqFt;\n}\nreturn sum;"
    },
    {
      "id": "goals__q_scorecard",
      "projectInputs": [],
      "staticValues": ["goals__st_totalGoalsTargeted"],
      "lookUps": [],
      "quantities": ["goals__q_totalGoalsAchieved", "goals__q_totalTargetsAchieved", "goals__q_totalTargetsTargeted", "goals__q_scCapexIncrease"],
      "output": "return {\ngoals: {\n  achieved: goals__q_totalGoalsAchieved,\n  targeted: goals__st_totalGoalsTargeted,\n},\ntargets: {\n  achieved: goals__q_totalTargetsAchieved,\n  targeted: goals__q_totalTargetsTargeted,\n},\ncapexIncrease: goals__q_scCapexIncrease,\n};"
    },
    {
      "id": "goals__q_goalNetZeroEnergy",
      "projectInputs": ["trickle__pi_percentageEnergySavings", "trickle__pi_capexSumEnergyEnabled", "project__pi_builtUpArea"],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const progress = trickle__pi_percentageEnergySavings;\nreturn {\nname: 'Net Zero Energy',\ndescription:\n  'Net Zero Energy buildings generate as much energy as they consume, resulting in a net-zero balance between energy production and consumption.',\nprogress,\ncostPerSqFt: trickle__pi_capexSumEnergyEnabled / project__pi_builtUpArea,\nstatus: utilities.utility_goalsStatusCheck(progress),\n};"
    },
    {
      "id": "goals__q_targetNzeMORE",
      "projectInputs": [
        "trickle__pi_renewableEnergySavings",
        "trickle__pi_moreState",
        "trickle__pi_annualBaselineEnergyConsumption",
        "trickle__pi_sumOfCapexInRenewableSourcesSubCategory",
        "trickle__pi_sumOfCapexInEnabledInterventionsInRenewableSourcesSubCategory",
        "trickle__pi_energyServiceConsumptionSCRE",
        "trickle__pi_projectBuiltUpArea"
      ],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const maxRenewableEnergySavings = trickle__pi_renewableEnergySavings;\n  const maxContributionPercentage =\n    (maxRenewableEnergySavings / trickle__pi_annualBaselineEnergyConsumption) *\n    100;\n\n  const progress = trickle__pi_energyServiceConsumptionSCRE;\n  const additionalCost =\n    trickle__pi_sumOfCapexInRenewableSourcesSubCategory -\n    trickle__pi_sumOfCapexInEnabledInterventionsInRenewableSourcesSubCategory;\n  return {\n    name: 'Maximize Onsite Renewable Energy',\n    maxRenewableEnergySavings,\n    maxContributionPercentage,\n    additionalCost,\n    tier: utilities.utility_goalsTierCheck(maxContributionPercentage),\n    progress,\n    status: utilities.utility_goalsStatusCheck(progress),\n    achievability: maxRenewableEnergySavings == 0 ? 'No' : 'Yes',\n    additionalCostPerUnitArea: additionalCost / trickle__pi_projectBuiltUpArea,\n    state: trickle__pi_moreState,\n  };"
    },
    {
      "id": "goals__q_targetNzeCAEN",
      "projectInputs": [
        "trickle__pi_renewableEnergySavings",
        "trickle__pi_annualBaselineEnergyConsumption",
        "trickle__pi_energyServiceConsumptionSubCategoriesAnnualBaselineCommonAreaConsumption",
        "trickle__pi_sumOfCapexInRenewableSourcesSubCategory",
        "trickle__pi_sumOfCapexInEnabledInterventionsInRenewableSourcesSubCategory",
        "trickle__pi_sumOfEnergySavingsAnnualOfEnabledInterventionsInRenewableSourcesSubCategory",
        "trickle__pi_projectBuiltUpArea",
        "trickle__pi_maxRenewableEnergySavings",
        "trickle__pi_caenState"
      ],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const maxContributionPercent =\n(trickle__pi_maxRenewableEnergySavings /\n  trickle__pi_annualBaselineEnergyConsumption) *\n100;\nconst progress =\n(trickle__pi_sumOfEnergySavingsAnnualOfEnabledInterventionsInRenewableSourcesSubCategory *\n  100) /\ntrickle__pi_energyServiceConsumptionSubCategoriesAnnualBaselineCommonAreaConsumption;\nconst maxPotentialPercent =\n(trickle__pi_maxRenewableEnergySavings * 100) /\ntrickle__pi_energyServiceConsumptionSubCategoriesAnnualBaselineCommonAreaConsumption;\nconst additionalCost =\ntrickle__pi_sumOfCapexInRenewableSourcesSubCategory -\ntrickle__pi_sumOfCapexInEnabledInterventionsInRenewableSourcesSubCategory;\nreturn {\nname: 'Common Area Energy Neutral',\nmaxRenewableEnergySavings: trickle__pi_renewableEnergySavings,\nmaxContributionPercent,\nmaxPotentialPercent,\nadditionalCost,\ntier: utilities.utility_goalsTierCheck(maxContributionPercent),\nprogress,\nstatus: utilities.utility_goalsStatusCheck(progress),\nachievability: maxPotentialPercent < 100 ? 'No' : 'Yes',\nadditionalCostPerUnitArea: additionalCost / trickle__pi_projectBuiltUpArea,\nstate: trickle__pi_caenState,\n};"
    },
    {
      "id": "goals__q_goalNetZeroWater",
      "projectInputs": [
        "trickle__pi_waterServiceSustainabilityLevelPercentWaterSavings",
        "trickle__pi_sumOfCapexInEnabledInterventionsInWaterCategory",
        "trickle__pi_projectBuiltUpArea"
      ],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const progress =\ntrickle__pi_waterServiceSustainabilityLevelPercentWaterSavings;\nreturn {\nname: 'Net Zero Water',\ndescription:\n  'Net Zero Water for a building involves strategies to minimize water usage and maximize reuse, aiming to balance water consumption with an equal return to the local watershed or aquifer, ultimately achieving a net-zero impact on water resources.',\nprogress,\ncostPerSqFt:\n  trickle__pi_sumOfCapexInEnabledInterventionsInWaterCategory /\n  trickle__pi_projectBuiltUpArea,\nstatus: utilities.utility_goalsStatusCheck(progress),\n};"
    },
    {
      "id": "goals__q_targetNzwCSWM",
      "projectInputs": [
        "trickle__pi_swmServiceOutcomesSwmAnnualWater",
        "trickle__pi_annualBaselineWaterConsumption",
        "trickle__pi_projectBuiltUpArea",
        "trickle__pi_swmEnabled",
        "trickle__pi_swmServiceOutcomesSWMCapex",
        "trickle__pi_cswmState"
      ],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const maxContributionPercent =\n(trickle__pi_swmServiceOutcomesSwmAnnualWater /\n  trickle__pi_annualBaselineWaterConsumption) *\n100;\nconst additionalCost = trickle__pi_swmEnabled\n? 0\n: trickle__pi_swmServiceOutcomesSWMCapex;\nreturn {\nname: 'Complete Smart Water Metering',\nmaxContributionPercent,\nadditionalCost,\ntier: utilities.utility_goalsTierCheck(maxContributionPercent),\nprogress: trickle__pi_swmEnabled ? 100 : 0,\nachievability: 'Yes',\nadditionalCostPerUnitArea: additionalCost / trickle__pi_projectBuiltUpArea,\nstate: trickle__pi_cswmState,\n};"
    },
    {
      "id": "goals__q_goalNetZeroWaste",
      "projectInputs": ["trickle__pi_waterServiceSLPercentWS", "trickle__pi_sumOfCapexInEnabledInterventionsInWaterCategory", "trickle__pi_projectBuiltUpArea"],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const progress = trickle__pi_waterServiceSLPercentWS;\nreturn {\nname: 'Net Zero Waste',\ndescription:\n  'Net Zero Waste in a building aims to reduce waste generation, increase recycling, and minimize landfill contributions, ultimately striving for a net-zero impact on waste disposal.',\nprogress,\ncostPerSqFt:\n  trickle__pi_sumOfCapexInEnabledInterventionsInWaterCategory /\n  trickle__pi_projectBuiltUpArea,\nstatus: utilities.utility_goalsStatusCheck(progress),\n};"
    },
    {
      "id": "goals__q_goalNetZeroEmbodiedCarbon",
      "projectInputs": [
        "trickle__pi_materialServiceSustainabilityLevelPercentMaterialSavings",
        "trickle__pi_sumOfCapexInEnabledInterventionsInMaterialCategory",
        "trickle__pi_projectBuiltUpArea"
      ],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const progress =\ntrickle__pi_materialServiceSustainabilityLevelPercentMaterialSavings;\nreturn {\nname: 'Net Zero Embodied Carbon',\ndescription: `Net Zero Embodied Carbon in construction minimizes carbon emissions from building materials and processes, aiming for a net-zero impact on the building's carbon footprint.`,\nprogress,\ncostPerSqFt:\n  trickle__pi_sumOfCapexInEnabledInterventionsInMaterialCategory /\n  trickle__pi_projectBuiltUpArea,\nstatus: utilities.utility_goalsStatusCheck(progress),\n};"
    },
    {
      "id": "goals__q_targetNzecCSAM",
      "projectInputs": [
        "trickle__pi_sumOfMaterialSavingsAnnualInStructureSubCategory",
        "trickle__pi_materialServiceSustainabilityLevelAnnualBaselineEC",
        "trickle__pi_sumOfCapexInStructureSubCategory",
        "trickle__pi_sumOfCapexInEnabledInterventionsInStructureSubCategory",
        "trickle__pi_sumOfMaterialSavingsAnnualInEnabledInterventionsInStructureSubCategory",
        "trickle__pi_projectBuiltUpArea",
        "trickle__pi_csamState"
      ],
      "staticValues": [],
      "lookUps": [],
      "quantities": [],
      "output": "const maxMaterialSavings =\ntrickle__pi_sumOfMaterialSavingsAnnualInStructureSubCategory;\nconst maxContributionPercent =\n(maxMaterialSavings /\n  trickle__pi_materialServiceSustainabilityLevelAnnualBaselineEC) *\n100;\nconst progress =\n(trickle__pi_sumOfMaterialSavingsAnnualInEnabledInterventionsInStructureSubCategory *\n  100) /\ntrickle__pi_materialServiceSustainabilityLevelAnnualBaselineEC;\nconst additionalCost =\ntrickle__pi_sumOfCapexInStructureSubCategory -\ntrickle__pi_sumOfCapexInEnabledInterventionsInStructureSubCategory;\nreturn {\nname: 'Core & Shell Alternative Materials',\nlist: 'Structural Steel, Cement',\nmaxMaterialSavings,\nmaxContributionPercent,\nadditionalCost,\ntier: utilities.utility_goalsTierCheck(maxContributionPercent),\nprogress,\nstatus: utilities.utility_goalsStatusCheck(progress),\nachievability: 'Yes',\nadditionalCostPerUnitArea: additionalCost / trickle__pi_projectBuiltUpArea,\nstate: trickle__pi_csamState,\n};"
    }
  ],
  "types": {
    "trickle__pi_percentageEnergySavings": "number",
    "trickle__pi_capexSumEnergyEnabled": "number",
    "project__pi_builtUpArea": "number",
    "trickle__pi_renewableEnergySavings": "number",
    "trickle__pi_moreState": "boolean",
    "trickle__pi_annualBaselineEnergyConsumption": "number",
    "trickle__pi_sumOfCapexInRenewableSourcesSubCategory": "number",
    "trickle__pi_sumOfCapexInEnabledInterventionsInRenewableSourcesSubCategory": "number",
    "trickle__pi_energyServiceConsumptionSCRE": "number",
    "trickle__pi_projectBuiltUpArea": "number",
    "trickle__pi_energyServiceEnergyPotentialRenewableEnergySavings": "number",
    "trickle__pi_energyServiceSustainabilityLevelAnnualBaselineEnergyConsumption": "number",
    "trickle__pi_energyServiceConsumptionSubCategoriesAnnualBaselineCommonAreaConsumption": "number",
    "trickle__pi_sumOfEnergySavingsAnnualOfEnabledInterventionsInRenewableSourcesSubCategory": "number",
    "trickle__pi_maxRenewableEnergySavings": "number",
    "trickle__pi_waterServiceSustainabilityLevelPercentWaterSavings": "number",
    "trickle__pi_sumOfCapexInEnabledInterventionsInWaterCategory": "number",
    "trickle__pi_swmServiceOutcomesSwmAnnualWater": "number",
    "trickle__pi_annualBaselineWaterConsumption": "number",
    "trickle__pi_swmEnabled": "boolean",
    "trickle__pi_swmServiceOutcomesSWMCapex": "number",
    "trickle__pi_waterServiceSLPercentWS": "number",
    "trickle__pi_materialServiceSustainabilityLevelPercentMaterialSavings": "number",
    "trickle__pi_sumOfCapexInEnabledInterventionsInMaterialCategory": "number",
    "trickle__pi_sumOfMaterialSavingsAnnualInStructureSubCategory": "number",
    "trickle__pi_materialServiceSustainabilityLevelAnnualBaselineEC": "number",
    "trickle__pi_sumOfCapexInStructureSubCategory": "number",
    "trickle__pi_sumOfCapexInEnabledInterventionsInStructureSubCategory": "number",
    "trickle__pi_sumOfMaterialSavingsAnnualInEnabledInterventionsInStructureSubCategory": "number",
    "trickle__pi_caenState": "boolean",
    "trickle__pi_cswmState": "boolean",
    "trickle__pi_csamState": "boolean"
  }
}
