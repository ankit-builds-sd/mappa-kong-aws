{"quantities":[{"id":"swm__q_sensorCalc","arguments":"swm__pi_projectCategory:string,swm__pi_clubHouseUtilitySensor:boolean,swm__pi_supplySideTankerUtilitySensor:boolean,swm__pi_supplySideBorewellUtilitySensor:boolean,swm__pi_inletsPerStudio:number,swm__pi_inletsPerOneBHK:number,swm__pi_inletsPerTwoBHK:number,swm__pi_inletsPerThreeBHK:number,swm__pi_inletsPerFourBHK:number,occupancy__pi_studio:number,occupancy__pi_oneBHK:number,occupancy__pi_twoBHK:number,occupancy__pi_threeBHK:number,occupancy__pi_fourBHK:number,occupancy__pi_villaOneBHK:number,occupancy__pi_villaFourBHK:number,occupancy__pi_villaThreeBHK:number,occupancy__pi_villaTwoBHK:number,occupancy__pi_villaStudio:number,occupancy__pi_penthouseOneBHK:number,occupancy__pi_penthouseThreeBHK:number,occupancy__pi_penthouseFourBHK:number,occupancy__pi_penthouseTwoBHK:number,occupancy__pi_penthouseStudio:number,swm__st_chSensors:number,swm__st_borewellSensors:number,swm__st_tankerSensors:number,swm__st_otherSensors:number","body":"let swmStudio = null;\n  let swmOneBHK = null;\n  let swmTwoBHK = null;\n  let swmThreeBHK = null;\n  let swmFourBHK = null;\n  let swmStudioSensors = null;\n  let swmOneBHKSensors = null;\n  let swmTwoBHKSensors = null;\n  let swmThreeBHKSensors = null;\n  let swmFourBHKSensors = null;\n  let swmNumberOfSensors = null;\n  let swmNumberOfUtilitySensors = null;\n  if (swm__pi_projectCategory === 'villa') {\n    swmStudio = 0;\n    swmOneBHK = occupancy__pi_villaOneBHK;\n    swmTwoBHK = occupancy__pi_villaTwoBHK;\n    swmThreeBHK = occupancy__pi_villaThreeBHK;\n    swmFourBHK = occupancy__pi_villaFourBHK;\n  } else {\n    swmStudio = occupancy__pi_studio + occupancy__pi_penthouseStudio;\n    swmOneBHK = occupancy__pi_oneBHK + occupancy__pi_penthouseOneBHK;\n    swmTwoBHK = occupancy__pi_twoBHK + occupancy__pi_penthouseTwoBHK;\n    swmThreeBHK = occupancy__pi_threeBHK + occupancy__pi_penthouseThreeBHK;\n    swmFourBHK = occupancy__pi_fourBHK + occupancy__pi_penthouseFourBHK;\n  }\n  swmStudioSensors = swmStudio * swm__pi_inletsPerStudio;\n  swmOneBHKSensors = swmOneBHK * swm__pi_inletsPerOneBHK;\n  swmTwoBHKSensors = swmTwoBHK * swm__pi_inletsPerTwoBHK;\n  swmThreeBHKSensors = swmThreeBHK * swm__pi_inletsPerThreeBHK;\n  swmFourBHKSensors = swmFourBHK * swm__pi_inletsPerFourBHK;\n\n  swmNumberOfSensors =\n    swmStudioSensors +\n    swmOneBHKSensors +\n    swmTwoBHKSensors +\n    swmThreeBHKSensors +\n    swmFourBHKSensors;\n  if (swm__pi_clubHouseUtilitySensor === true) {\n    swmNumberOfUtilitySensors = swmNumberOfUtilitySensors + swm__st_chSensors;\n  }\n  if (swm__pi_supplySideTankerUtilitySensor === true) {\n    swmNumberOfUtilitySensors =\n      swmNumberOfUtilitySensors + swm__st_tankerSensors;\n  }\n  if (swm__pi_supplySideBorewellUtilitySensor === true) {\n    swmNumberOfUtilitySensors =\n      swmNumberOfUtilitySensors + swm__st_borewellSensors;\n  }\n  swmNumberOfUtilitySensors = swmNumberOfUtilitySensors + swm__st_otherSensors;\n  return {\n    swmNumberOfSensors,\n    swmNumberOfUtilitySensors,\n  };"},{"id":"swm__q_outcomes","arguments":"swm__pi_capexPreSdPlus:number,global__st_convertLtoKL:number,global__st_daysInYear:number,swm__st_fixedCost:number,swm__st_sensorInstallationCost:number,swm__q_sensorCalc,water__q_currentWaterTable","body":"let productIdentifier = 'dummy';\nlet swmDaily;\nlet swmAnnualWater;\nlet swmUnitApartmentCapex;\nlet swmUnitUtilityCapex = null;\nlet swmCapexPostSdPlus = null;\nlet swmCapex = null;\nlet swmOpex = null;\nswmDaily =\n(water__q_currentWaterTable.smartWaterMeter.residentialDomestic * 100) /\nglobal__st_convertLtoKL;\nswmAnnualWater = swmDaily * global__st_daysInYear;\nswmUnitApartmentCapex = 100;\nswmUnitUtilityCapex = 100;\nswmCapexPostSdPlus =\n(swmUnitApartmentCapex + swm__st_sensorInstallationCost) *\n  swm__q_sensorCalc.swmNumberOfSensors +\n(swmUnitUtilityCapex + swm__st_sensorInstallationCost) *\n  swm__q_sensorCalc.swmNumberOfUtilitySensors +\nswm__st_fixedCost;\nswmCapex = swmCapexPostSdPlus - swm__pi_capexPreSdPlus;\nswmOpex = 100;\nreturn {\nswmDaily,\nswmAnnualWater,\nswmUnitApartmentCapex,\nswmUnitUtilityCapex,\nswmCapex,\nswmOpex,\n};"},{"id":"swm__q_outcomesPreSDPlus","arguments":"project__pi_city:string,global__st_daysInYear:number,swm__st_dailyPreSDPlus:number,swm__q_sensorCalc","body":"let swmAnnualWaterPreSDPlus = swm__st_dailyPreSDPlus * global__st_daysInYear;\nlet swmCapexPreSDPlus = swm__q_sensorCalc.swmNumberOfSensors * 0.6; //need to implement a new utility function\nreturn { swmAnnualWaterPreSDPlus, swmCapexPreSDPlus };"},{"id":"swm__q_projectLevelInsights","arguments":"swm__pi_annualBaseLineWaterConsumption:number,global__st_convertKgToTon:number,global__st_treesPerTonCF:number,swm__q_outcomes","body":"let swmCFMitigated = null;\nlet swmSdgNumber = 100;\nlet swmTreesSaved = null;\nlet swmPercentageTotalWaterConsumption = null;\nswmCFMitigated =\n1.6 * swm__q_outcomes.swmAnnualWater * global__st_convertKgToTon;\nswmTreesSaved = swmCFMitigated * global__st_treesPerTonCF;\nswmPercentageTotalWaterConsumption =\n(swm__q_outcomes.swmAnnualWater * 100) /\nswm__pi_annualBaseLineWaterConsumption;\nreturn { swmCFMitigated, swmTreesSaved, swmPercentageTotalWaterConsumption };"},{"id":"swm__q_flowDiagram","arguments":"swm__q_outcomes","body":"let swmFlowDiagramDomestic = swm__q_outcomes.swmDaily;\nlet swmFlowDiagramHealthFaucet = 0;\nlet swmFlowDiagramFlushing = 0;\nlet swmFlowDiagramCommonArea = 0;\nlet swmFlowDiagramDrinking = 0;\nreturn swmFlowDiagramDomestic;"},{"id":"swm__q_passiveEnergy","arguments":"project__pi_numberOfFloors:number,project__pi_floorToFloorHeight:number,global__st_convertJoulesTokW:number,global__st_convertLtoM3:number,global__st_accelarationDueToGravity:number,water__st_pumpEfficiency:number,water__st_motorEfficiency:number,water__st_specificGravityOfWater:number,water__st_pumpFlowRate:number,swm__q_outcomes","body":"let timeTakenToPumpWater = null;\nlet buildingHeight = null;\nlet hydraulicPower = null;\nlet shaftPower = null;\nlet electricalInput = null;\nlet swmPassiveEnergykWh = null;\nlet swmPassiveEnergyOpex = null;\ntimeTakenToPumpWater =\n(swm__q_outcomes.swmAnnualWater * global__st_convertLtoM3) /\nwater__st_pumpFlowRate;\nbuildingHeight = project__pi_numberOfFloors * project__pi_floorToFloorHeight;\nhydraulicPower =\n(water__st_pumpFlowRate *\n  buildingHeight *\n  global__st_accelarationDueToGravity *\n  water__st_specificGravityOfWater) /\nglobal__st_convertJoulesTokW;\nshaftPower = hydraulicPower / water__st_pumpEfficiency;\nelectricalInput = shaftPower / water__st_motorEfficiency;\nswmPassiveEnergykWh = electricalInput * timeTakenToPumpWater;\nswmPassiveEnergyOpex = 5000;\nreturn {\ntimeTakenToPumpWater,\nbuildingHeight,\nhydraulicPower,\nshaftPower,\nelectricalInput,\nswmPassiveEnergykWh,\nswmPassiveEnergyOpex,\n};"},{"id":"swm__q_secondaryImpact","arguments":"swm__q_passiveEnergy","body":"let passiveEnergykWh = null;\nlet passiveEnergyOpex = null;\nlet passiveWasteKg = null;\nlet passiveWasteOpex = null;\npassiveEnergykWh = swm__q_passiveEnergy.swmPassiveEnergykWh;\npassiveEnergyOpex = swm__q_passiveEnergy.swmPassiveEnergyOpex;\npassiveWasteKg = 0;\npassiveWasteOpex = 0;\nreturn {\npassiveEnergyOpex,\npassiveEnergykWh,\npassiveWasteKg,\npassiveWasteOpex,\n};"},{"id":"swm__q_goalMonitoring","arguments":"swm__q_outcomes","body":"let waterGoal = null;\nlet contribution = null;\nwaterGoal = 100;\ncontribution = swm__q_outcomes.swmAnnualWater / 200;\nreturn { waterGoal, contribution };"},{"id":"swm__q_overviewBarGraph","arguments":"swm__q_outcomes","body":"let title = null;\n  let totalSavings = null;\n  let seriesNameOne = null;\n  let seriesValueOne = null;\n  let seriesNameTwo = null;\n  let seriesValueTwo = null;\n  let seriesNameThree = null;\n  let seriesValueThree = null;\n  let seriesNameFour = null;\n  let seriesValueFour = null;\n  let seriesNameFive = null;\n  let seriesValueFive = null;\n  title = 'Smart Water Meter savings by category';\n  totalSavings = swm__q_outcomes.swmAnnualWater;\n\n  seriesNameOne = 'domestic';\n  seriesValueOne = swm__q_outcomes.swmAnnualWater;\n  seriesNameTwo = 'health faucet';\n  seriesValueTwo = 0;\n  seriesNameThree = 'flushing';\n  seriesValueThree = 0;\n  seriesNameFour = 'common area';\n  seriesValueFour = 0;\n  seriesNameFive = 'drinking';\n  seriesValueFive = 0;\n  return { title, totalSavings };"},{"id":"swm__q_overviewBarDonutGraph","arguments":"swm__q_outcomes","body":"let donutOneTitle = null;\nlet donutOneValue = null;\ndonutOneTitle = '% of Total Water';\ndonutOneValue = (swm__q_outcomes.swmAnnualWater * 100) / 500;\nreturn { donutOneTitle, donutOneValue };"}]}